name: "JFrog-GitHub NPM Publish OIDC Integration"
on: push

# This is required as per
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-cloud-providers#adding-permissions-settings
permissions:
  id-token: write


jobs:
  build:
     runs-on: ubuntu-latest
     env:
      OIDC_PROVIDER: 'deepu19t'
      #OIDC_AUDIENCE: 'access-oidc-demo'
      PLATFORM_REPO: 'blr-td-mvn-virtual'
     #defaults:
      #run:
      #  working-directory: ./package
     steps:
       - name: Checkout
         uses: actions/checkout@v3
              
       - name: Setup Node npm
         uses: actions/setup-node@v3
  
      # - name: Setup jfrog cli
       #  uses: jfrog/setup-jfrog-cli@v3
      #   env:
      #    JF_URL: ${{ secrets.JF_URL }}
     #     JF_ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}
   
       - name: Setup JFrog CLI
         uses: jfrog/setup-jfrog-cli@v3
         env:  
           JF_URL: ${{ secrets.JF_URL }}
         with:
           oidc-provider-name: ${{ env.OIDC_PROVIDER }}
      
       - name: Set CLI Config
         run: |
           jf mvn-config --global=true --repo-resolve-releases=$PLATFORM_REPO --repo-deploy-releases=$PLATFORM_REPO
         
         
           
       - name: Install Dependencies
         run: jf mvn clean install --build-name=dt-maven-sample-test --build-number=1
           
       #- name: Run tests
      #   run: mvn test
         
      # - name: Publish
     #    run: jf mvn publish
     #    
       - name: Publish Build info With JFrog CLI
         run: |
          # Collect environment variables for the build
             jf rt bce dt-maven-sample-test 1
          # Collect VCS details from git and add them to the build
          jf rt build-add-git dt-maven-sample-test 1
          # Publish build info
          jf rt build-publish dt-maven-sample-test 1
          #promotion
          jf rt bpr dt-maven-sample-test 1 dt-prod-libs-release-local
